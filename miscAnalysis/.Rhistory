penalty.info.df <-
tibble(
Offense = team.o.lst,
Defense = team.d.lst,
Team = penalty.info.team,
Type = penalty.info.type,
Player = penalty.info.player,
Play.Text = play.text.penalties$Play.text,
Penalty.text = play.text.penalties$Penalty
)
#sort(unique(penalty.info.type))
write.csv(
penalty.info.df,
file = paste0(team, "-penalty-info.df.csv"),
row.names = F
)
penalty.list <- append(penalty.list, penalty.info.type)
}
#team <- "Alabama"
#team <- "Arkansas"
#team <- "Auburn"
#team <- "Florida"
#team <- "Georgia"
#team <- "Kentucky"
#team <- "LSU"
#team <- "Mississippi State"
team <- "Missouri"
penalty.list <- c()
# team.list <- read.csv("C:/Users/DanielSmith/Dropbox/program_project/CFB/data/FBS/teams-fbs-2021.csv", header = TRUE)
# for(team in unlist(team.list))
{
print(team)
play.text <- plays %>%
#filter(Offense == team | Defense == team, Year == 2021) %>%
filter(Offense == team | Defense == team) %>%
select("Offense", "Defense", "Play.text")
# write.csv(play.text, file = "play.text.csv", row.names=F)
#play.text
txt.list <- c()
for (txt in play.text$Play.text)
{
res <- str_match(txt, penalties.regex)[1]
if (!is.na(res[1]))
{
txt.list <- append(txt.list, txt)
}
}
#txt.list
play.text.penalties <-
play.text %>% filter(Play.text %in% txt.list)
t.penalty.after <-
lapply(play.text.penalties$Play.text,
str_match,
regex.text.after.penalty)
for (i in 1:length(t.penalty.after))
{
t.penalty.after[[i]] <- t.penalty.after[[i]][1]
}
play.text.penalties <-
play.text.penalties %>% add_column(Penalty = unlist(t.penalty.after))
#write.csv(play.text.penalties, file = paste0(team,"-playtext-penalty.csv"), row.names=F)
print("Finding res1")
team.o.lst <- c()
team.d.lst <- c()
penalty.info.team <- c()
for (i in 1:length(play.text.penalties$Offense))
{
res1 <-
foulTeam(
play.text.penalties$Play.text[i],
play.text.penalties$Offense[i],
play.text.penalties$Defense[i],
school_colors
)
penalty.info.team <- append(penalty.info.team, res1)
team.d.lst <- append(team.d.lst,play.text.penalties$Defense[i])
team.o.lst <- append(team.o.lst,play.text.penalties$Offense[i])
}
# i <- 70
# play.text.penalties$Play.text[i]
# {
# str_match(play.text.penalties$Play.text[i], team.penalties.regex.pre)[1]
# str_match(play.text.penalties$Play.text[i], team.penalties.regex.post)[1]
# res1 <- trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.before.regex)[2]), which = "both")
# res1
# res1 <- trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.regex.pre)[1]), which = "both")
# res1
# res1 <- trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.regex.post)[1]), which = "both")
# res1
# res1 <- toupper(trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.regex.titlecase)[1]), which = "both"))
# res1
# team.o <-  play.text.penalties$Offense[i]
# team.d <-  play.text.penalties$Defense[i]
# team.o
# team.d
# regex.team.o <- gsub("&amp;", "&", (school_colors %>% filter(School == team.o))$Penalty)
# regex.team.d <- gsub("&amp;", "&", (school_colors %>% filter(School == team.d))$Penalty)
# regex.team.o
# regex.team.d
# #gsub("&amp;", "&", regex.team.d)
# !is.na(str_match(res1, regex.team.o)[1])
# !is.na(str_match(res1, regex.team.d)[1])
# if(!is.na(str_match(res1, regex.team.o)[1]))
# {
#   res1 <- team.o
# }else if(!is.na(str_match(res1, regex.team.d)[1])){
#   res1 <- team.d
# }else{
#   res1 <- paste0("Add team code for: ", res1)
# }
# }
# res1
# foulTeam(play.text.penalties$Play.text[i], play.text.penalties$Offense[i], play.text.penalties$Defense[i], school_colors)
#
print("Finding res2")
penalty.info.type <- c()
for (txt in play.text.penalties$Play.text)
{
res2 <- foulType(txt)
penalty.info.type <- append(penalty.info.type, res2)
}
print("Finding res3")
penalty.info.player <- c()
for (txt in play.text.penalties$Play.text)
{
#print(txt)
res3 <- foulTransgressor(txt)
penalty.info.player <- append(penalty.info.player, res3)
}
penalty.info.df <-
tibble(
Offense = team.o.lst,
Defense = team.d.lst,
Team = penalty.info.team,
Type = penalty.info.type,
Player = penalty.info.player,
Play.Text = play.text.penalties$Play.text,
Penalty.text = play.text.penalties$Penalty
)
#sort(unique(penalty.info.type))
write.csv(
penalty.info.df,
file = paste0(team, "-penalty-info.df.csv"),
row.names = F
)
penalty.list <- append(penalty.list, penalty.info.type)
}
# Packages #####################################################################
library(tidyverse)
library(openxlsx)
library(stringi)
school_colors <-
read.xlsx(
"../school_colors/school_colors.xlsx"
)
year <- "2021"
week <- "wk06"
seasontype <- "regular"
plays <- read.csv(paste0("../../../../data/", team,"_",year,"_",week,"_",seasontype,".csv"))
year <- 2021
week <- "wk06"
seasontype <- "regular"
plays <- read.csv(paste0("../../../../data/", team,"_",year,"_",week,"_",seasontype,".csv"))
#plays <- read.csv(paste0("../../../../data/", team,"_",year,"_",week,"_",seasontype,".csv"))
plays <- read.csv(paste0("C:/Users/DanielSmith/Dropbox/program_project/data/", team,"_",year,"_",week,"_",seasontype,".csv"))
#team <- "Auburn"
#team <- "Florida"
#team <- "Georgia"
#team <- "Kentucky"
#team <- "LSU"
#team <- "Mississippi State"
#team <- "Missouri"
#team <- "Ole Miss"
#team <- "South Carolina"
#team <- "Tennessee"
team <- "Texas A&M"
plays <- read.csv(paste0("../../../../data/", team,"_",year,"_",week,"_",seasontype,".csv"))
#plays <- read.csv(paste0("../../../../data/", team,"_",year,"_",week,"_",seasontype,".csv"))
plays <- read.csv(paste0("C:/Users/DanielSmith/Dropbox/program_project/data/", team,"_",year,"_",week,"_",seasontype,".csv"))
penalty.list <- c()
print(team)
play.text <- plays %>%
#filter(Offense == team | Defense == team, Year == 2021) %>%
filter(Offense == team | Defense == team) %>%
select("Offense", "Defense", "Play.text")
txt.list <- c()
for (txt in play.text$Play.text)
{
res <- str_match(txt, penalties.regex)[1]
if (!is.na(res[1]))
{
txt.list <- append(txt.list, txt)
}
}
play.text.penalties <-
play.text %>% filter(Play.text %in% txt.list)
t.penalty.after <-
lapply(play.text.penalties$Play.text,
str_match,
regex.text.after.penalty)
for (i in 1:length(t.penalty.after))
{
t.penalty.after[[i]] <- t.penalty.after[[i]][1]
}
play.text.penalties <-
play.text.penalties %>% add_column(Penalty = unlist(t.penalty.after))
print("Finding res1")
team.o.lst <- c()
team.d.lst <- c()
penalty.info.team <- c()
for (i in 1:length(play.text.penalties$Offense))
{
res1 <-
foulTeam(
play.text.penalties$Play.text[i],
play.text.penalties$Offense[i],
play.text.penalties$Defense[i],
school_colors
)
penalty.info.team <- append(penalty.info.team, res1)
team.d.lst <- append(team.d.lst,play.text.penalties$Defense[i])
team.o.lst <- append(team.o.lst,play.text.penalties$Offense[i])
}
i <- 11
play.text.penalties$Play.text[i]
i <- 1
play.text.penalties$Play.text[i]
i <- 2
play.text.penalties$Play.text[i]
str_match(play.text.penalties$Play.text[i], team.penalties.regex.pre)[1]
str_match(play.text.penalties$Play.text[i], team.penalties.regex.post)[1]
res1 <- trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.before.regex)[2]), which = "both")
res1
res1 <- trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.regex.pre)[1]), which = "both")
res1
res1 <- trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.regex.post)[1]), which = "both")
res1
res1 <- toupper(trimws(gsub(penalties.regex, "", str_match(play.text.penalties$Play.text[i], team.penalties.regex.titlecase)[1]), which = "both"))
res1
foulTeam(txt, "Alabama", "Texas A&M", school_colors)
foulTeam <- function(txt, offense, defense, school_colors)
{
mydebug = TRUE
penalties.regex <- "(Penalty)|(PENALTY)|(Penalty)|(PENALTY)"
declined.regex <- "[Dd]eclined"
enforced.regex <- "[Ee]nforced"
team.penalties.enforcedDeclined.split.regex <-
"declined ((?:[A-Z\\p{Lu}-]+\\s?)+)\\b"
team.penalties.enforcedDeclined.combine.regex <-
"((?:[A-Z\\p{Lu}-]+\\s?)+)\\b(?:(?:Penalty)|(?:PENALTY)|(?:Penalty)|(?:PENALTY))"
team.penalties.before.regex <-
"(?:PENALTY|Penalty),? Before the snap,? ([A-Z\\p{Lu}-]+) "
team.penalties.regex.pre.lower <-
"(Penalty\\s(([A-Z&\\p{Lu}-]{2,}\\s?)+))"
team.penalties.regex.pre.upper <-
"(PENALTY\\s(([A-Z&\\p{Lu}-]{2,}\\s?)+))"
team.penalties.regex.post.lower <-
"((([A-Z&\\p{Lu}-]{2,}\\s?)+)\\sPenalty)"
team.penalties.regex.post.upper <-
"((([A-Z&\\p{Lu}-]{2,}\\s?)+)\\sPENALTY)"
team.penalties.regex.titlecase.pre.lower <-
"(Penalty\\s(([A-Z\\p{Lu}-][a-z\\p{Ll}A-Z&\\p{Lu}-]+\\s?)+))"
team.penalties.regex.titlecase.pre.upper <-
"(PENALTY\\s(([A-Z\\p{Lu}-][a-z\\p{Ll}A-Z&\\p{Lu}-]+\\s?)+))"
team.penalties.regex.titlecase.post.lower <-
"((([A-Z\\p{Lu}-][a-z\\p{Ll}A-Z&\\p{Lu}-]+\\s?)+)\\sPenalty)"
team.penalties.regex.titlecase.post.upper <-
"((([A-Z\\p{Lu}-][a-z\\p{Ll}A-Z&\\p{Lu}-]+\\s?)+)\\sPENALTY)"
team.penalties.regex.spacedUppers <-
"(?:PENALTY|Penalty),? ([A-Z] [A-Z])"
penalty.codes <-
c(
"OF",
"CIT",
"IL",
"IS",
"BI",
"IF",
"IP",
"IM",
"TGB",
"FL",
"RO",
"OFF",
"IB",
"PS",
"FD",
"PFRP",
"RU",
"UR",
"DL",
"HL",
"IR"
)
if(!is.na(str_match(tolower(txt), enforced.regex)[1]) & !is.na(str_match(tolower(txt), declined.regex)[1]))
{
if(!is.na(str_match(txt, team.penalties.enforcedDeclined.split.regex)[2]))
{
res1 <- trimws(str_match(txt, team.penalties.enforcedDeclined.split.regex)[2], which = "both")
if(mydebug) {print(paste("team.penalties.enforcedDeclined.split.regex:", res1))}
}else if(!is.na(str_match(txt, team.penalties.enforcedDeclined.combine.regex)[2])){
res1 <- trimws(str_match(txt, team.penalties.enforcedDeclined.combine.regex)[2], which = "both")
if(mydebug) {print(paste("team.penalties.enforcedDeclined.combine.regex:", res1))}
}
}else if(is.na(str_match(tolower(txt), declined.regex)[1])){
#Need to convert to a loop!
#Gets penalty that contains "Before the snap"
res1 <-
trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.before.regex)[2]
), which = "both")
if(mydebug) {print(paste("team.penalties.enforcedDeclined.combine.regex:", res1))}
if (is.na(res1))
{
#Gets penalty where Penalty comes before school name
res1 <-
trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.pre.lower)[1]
), which = "both")
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("team.penalties.enforcedDeclined.combine.regex:", res1))}
if (is.na(res1))
{
#Gets penalty where Penalty comes after school name
res1 <-
trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.pre.upper)[1]
), which = "both")
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("team.penalties.regex.pre.upper:", res1))}
if (is.na(res1))
{
#Gets penalty where Penalty comes after school name
res1 <-
trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.post.lower)[1]
), which = "both")
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("team.penalties.regex.post.lower:", res1))}
if (is.na(res1))
{
#Gets penalty where Penalty comes after school name
res1 <-
trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.post.upper)[1]
), which = "both")
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("team.penalties.regex.post.upper:", res1))}
if (is.na(res1) )
{
#Gets penalty where school name is in Titlecase instead of all CAPS
res1 <-
toupper(trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.titlecase.pre.lower)[1]
), which = "both"))
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("team.penalties.regex.titlecase.pre.lower:", res1))}
if (is.na(res1) )
{
#Gets penalty where school name is in Titlecase instead of all CAPS
res1 <-
toupper(trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.titlecase.pre.upper)[1]
), which = "both"))
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("team.penalties.regex.titlecase.pre.upper:", res1))}
if (is.na(res1) )
{
#Gets penalty where school name is in Titlecase instead of all CAPS
res1 <-
toupper(trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.titlecase.post.lower)[1]
), which = "both"))
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("team.penalties.regex.titlecase.post.lower:", res1))}
if (is.na(res1) )
{
#Gets penalty where school name is in Titlecase instead of all CAPS
res1 <-
toupper(trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.titlecase.post.upper)[1]
), which = "both"))
if(mydebug) {print(paste("team.penalties.regex.titlecase.post.upper:", res1))}
#Special cases
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("foulTeam.checkName:", res1))}
if (is.na(res1) )
{
res1 <-
toupper(trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.spacedUppers)[1]
), which = "both"))
if(mydebug) {print(paste("team.penalties.regex.spacedUppers:", res1))}
res1 <- foulTeam.checkName(res1, offense, defense, school_colors)
if(mydebug) {print(paste("foulTeam.checkName:", res1))}
}
}
}
}
}
}
}
}
}
} else if(!is.na(str_match(tolower(txt), declined.regex)[1])){
res1 <- NA
if(mydebug) {print(paste("declined.regex:", res1))}
}
regex.team.o <-
gsub("&amp;", "&", (school_colors %>% filter(School == offense))$Penalty)
regex.team.d <-
gsub("&amp;", "&", (school_colors %>% filter(School == defense))$Penalty)
if (!is.na(str_match(res1, regex.team.o)[1]))
{
res1 <- offense
} else if (!is.na(str_match(res1, regex.team.d)[1])) {
res1 <- defense
} else if (is.na(res1)) {
res1 <- NA
} else{
res1 <- paste0("Add team code for: ", res1)
}
res1
}
# play.text.penalties <-
#   play.text.penalties %>% add_column(Penalty = unlist(t.penalty.after))
#
# i <- 1024
# play.text.penalties$Play.text[i]
# foulTeam(play.text.penalties$Play.text[i], play.text.penalties$Offense[i], play.text.penalties$Defense[i], school_colors)
#foulTeam("McKee,Tanner pass incomplete to Yurosek,Benjamin PENALTY U W Offside (Tupuola-Fetui,Zion) 5 yards from U W41 to U W36, 1ST DOWN. NO PLAY.", "Stanford", "Washington", school_colors)
#----------------------------------------------------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------------------------------------------------
#
txt <- "TEXAS A&M Penalty, Delay of Game (5 Yards) to the Alab 40"
foulTeam(txt, "Alabama", "Texas A&M", school_colors)
team.penalties.regex.post.lower <-
"((([A-Z&\\p{Lu}-]{2,}\\s?)+)\\sPenalty)"
team.penalties.regex.post.upper <-
"((([A-Z&\\p{Lu}-]{2,}\\s?)+)\\sPENALTY)"
res1 <-
trimws(gsub(
penalties.regex,
"",
str_match(txt, team.penalties.regex.post.lower)[1]
), which = "both")
res1
foulTeam.checkName(res1, "Alabama", "TEXAS A&M", school_colors)
school_colors
school_colors %>% filter(School == "Texas A&M")
school_colors %>% filter(School == "Texas A&M")$Penalty
(school_colors %>% filter(School == "Texas A&M"))$Penalty
school_colors <- read.csv("../school_colors/school_colors.csv", header = TRUE,sep = ",")
foulTeam.checkName(res1, "Alabama", "TEXAS A&M", school_colors)
school_colors
school_colors <- read.csv("../school_colors/school_colors.csv", header = TRUE,sep = ",")
school_colors
school_colors <- read.csv("../school_colors/school_colors.csv", header = TRUE,sep = ",")
school_colors <- read.csv("../school_colors/school_colors.csv", header = TRUE,sep = ",")
school_colors
school_colors <-
read.xlsx(
"../school_colors/school_colors.xlsx"
)
school_colors <- read.csv("../school_colors/school_colors.csv", header = TRUE,sep = ",")
school_colors
school_colors <- read.csv("../school_colors/school_colors.csv", header = TRUE,sep = ",", fileEncoding="UTF-8-BOM")
school_colors
res1
foulTeam.checkName(res1, "Alabama", "TEXAS A&M", school_colors)
foulTeam.checkName(res1, "Alabama", "TEXAS A&M", school_colors)
(school_colors %>% filter(School == "Texas A&M"))
(school_colors %>% filter(School == "Texas A&M"))[1]
res1
str_match(res1,(school_colors %>% filter(School == "Texas A&M"))[1])
(school_colors %>% filter(School == "Texas A&M"))$Penalty
str_match(res1,(school_colors %>% filter(School == "Texas A&M"))$Penalty)[1]
foulTeam.checkName(res1, "Alabama", "TEXAS A&M", school_colors)
str_match(res1,(school_colors %>% filter(School == "Texas A&M"))$Penalty)[1]
is.na(str_match(res1,(school_colors %>% filter(School == "Texas A&M"))$Penalty)[1])
foulTeam.checkName <- function(res1, offense, defense, school_colors)
{
if(!is.na(str_match(res1,(school_colors %>% filter(School == offense))$Penalty)[1]))
{
if(!is.na(str_match(res1,(school_colors %>% filter(School == defense))$Penalty)[1]))
{
res1 <- NA
}
}
res1
}
foulTeam.checkName(res1, "Alabama", "TEXAS A&M", school_colors)
